***************
*** 45,51 ****
  	for(i=0;i<256;i++) { ln->subnodes[i] = NULL; }
  	return ln;
  }
! __inline void lzwnode_free(PLZWNODE node, int full) {
  	int i;
  	if(full) {
  		for(i=0;i<256;i++) { 
--- 45,51 ----
  	for(i=0;i<256;i++) { ln->subnodes[i] = NULL; }
  	return ln;
  }
! void lzwnode_free(PLZWNODE node, int full) {
  	int i;
  	if(full) {
  		for(i=0;i<256;i++) { 
***************
*** 122,138 ****
  #endif
  	}
  	//Flush data
! 	bfputc((lzw->node->num >> 8) & 0xFF, output);
! 	bfputc(lzw->node->num & 0xFF, output);
! 	bfflush(output);
  	ob += 2;
- 	printf("Compressed    %lli -> %lli (%.1f%%)    \n", ib, ob, (double)(ob * 100) / ib);
  	//Return
  	lzwbase_free(lzw);
! 	return 1;
  }
! int lzw_decompress(BufferedFile* input, BufferedFile* output) {
  	//Initialize LZW
  	int c,d,i,p;
  	long long ib=0,ob=0;
  	LZWNODE* last = NULL;
--- 126,143 ----
  #endif
  	}
  	//Flush data
!     if(output_end - output < 2) { lzwbase_free(lzw); return 0; }
!     *output++ = (lzw->node->num >> 8);
!     *output++ = lzw->node->num;
  	ob += 2;
  	//Return
  	lzwbase_free(lzw);
! 	return output_size - (output_end - output);
  }
! size_t lzwc_decompress(const unsigned char* input, size_t input_size, unsigned char* output, size_t output_size) {
  	//Initialize LZW
+     const unsigned char* input_end = input + input_size;
+     const unsigned char* output_end = output + output_size;
  	int c,d,i,p;
  	long long ib=0,ob=0;
  	LZWNODE* last = NULL;
